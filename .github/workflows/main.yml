name: Build and Deploy to GKE

on:
  push:
    branches:
      - main
# Define environment variables

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT_NUMBER }}
  PROJECT_NAME: ${{ secrets.GKE_PROJECT_ID }}
  SA_KEY: ${{ secrets.GKE_SA_KEY }}
  ARTIFACT_REG_REPOSITORY: timeoffapp
  LATEST_TAG: test-latest
  ARTIFACT_REG_LOCATION: us-east4-docker
  GKE_CLUSTER: gke-timeoffcluster    # Add your cluster name here.
  GKE_ZONE: us-east4   # Add your cluster zone here.
  DEPLOYMENT_NAME: timeoffapp # Add your deployment name here.
  IMAGE: time-off-app

#Execute jobs
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ env.SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "$ARTIFACT_REG_LOCATION.pkg.dev/$PROJECT_NAME/$ARTIFACT_REG_REPOSITORY/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          -f ./Dockerfile \
          .
    # Push the Docker image to Google Container Registry
    - name: Setup GCP SDK
      uses: google-github-actions/setup-gcloud@v0.3.0
    - name: Configure Docker Client
      shell: bash
      run: gcloud --quiet auth configure-docker "$ARTIFACT_REG_LOCATION.pkg.dev"
    - name: Publish
      run: |-
        docker push "$ARTIFACT_REG_LOCATION.pkg.dev/$PROJECT_NAME/$ARTIFACT_REG_REPOSITORY/$IMAGE:$GITHUB_SHA"
        docker image tag "$ARTIFACT_REG_LOCATION.pkg.dev/$PROJECT_NAME/$ARTIFACT_REG_REPOSITORY/$IMAGE:$GITHUB_SHA" "$ARTIFACT_REG_LOCATION.pkg.dev/$PROJECT_NAME/$ARTIFACT_REG_REPOSITORY/$IMAGE:$LATEST_TAG"
        docker push "$ARTIFACT_REG_LOCATION.pkg.dev/$PROJECT_NAME/$ARTIFACT_REG_REPOSITORY/$IMAGE:$LATEST_TAG"
    # Deploy GKE Cluster.
    - name: Provision Resources
      id: deployment
      uses: ghost-road-studio/deployment-manager@v0
      with:
        deployment: gke-timeoffcluster
        template: cluster.jinja
        credentials: ${{ secrets.GCP_SA_KEY }}
        labels: environment=dev
        properties: org_id:${{ secrets.GCP_ORGANIZATIONID }}
      
    
        # Configure Docker to use the gcloud command-line tool as a credential
        # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    #- uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
    #  with:
    #    cluster_name: ${{ env.GKE_CLUSTER }}
    #    location: ${{ env.GKE_ZONE }}
    #    credentials: ${{ env.SA_KEY }}
    # Set up kustomize
    #- name: Set up Kustomize
    #  run: |-
    #    curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
    #    chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    #- name: Deploy
    #  run: |-
    #    kubectl set image --record=true --namespace="default"  deployment/stg-servicebroker stg-servicebroker="gcr.io/$PROJECT_NAME/$IMAGE:$GITHUB_SHA"
    #    kubectl get services -o wide
